"""Initial clean migration

Revision ID: 41e1c71e5fdb
Revises: 
Create Date: 2025-05-24 13:12:24.349715

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = '41e1c71e5fdb'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('agent_runs',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('agent_name', sa.String(), nullable=False),
    sa.Column('task_type', sa.String(), nullable=True),
    sa.Column('input_data', sa.Text(), nullable=False),
    sa.Column('output_data', sa.Text(), nullable=True),
    sa.Column('is_successful', sa.Boolean(), nullable=True),
    sa.Column('effectiveness_score', sa.Float(), nullable=True),
    sa.Column('prompt_version', sa.String(), nullable=True),
    sa.Column('model_used', sa.String(), nullable=True),
    sa.Column('config_used', sa.JSON(), nullable=True),
    sa.Column('extra', sa.JSON(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_agent_runs_agent_name'), 'agent_runs', ['agent_name'], unique=False)
    op.create_index('ix_agent_runs_agent_task', 'agent_runs', ['agent_name', 'task_type'], unique=False)
    op.create_index(op.f('ix_agent_runs_created_at'), 'agent_runs', ['created_at'], unique=False)
    op.create_table('llm_models',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('provider', sa.String(), nullable=False),
    sa.Column('model', sa.String(), nullable=False),
    sa.Column('description', sa.String(), nullable=True),
    sa.Column('n_threads', sa.Integer(), nullable=True),
    sa.Column('n_batch', sa.Integer(), nullable=True),
    sa.Column('chat_format', sa.String(), nullable=True),
    sa.Column('n_ctx', sa.Integer(), nullable=True),
    sa.Column('numa', sa.Integer(), nullable=True),
    sa.Column('mixture_of_experts', sa.Boolean(), nullable=True),
    sa.Column('rope_scaling_type', sa.Integer(), nullable=True),
    sa.Column('f16_kv', sa.Boolean(), nullable=True),
    sa.Column('use_mlock', sa.Boolean(), nullable=True),
    sa.Column('use_mmap', sa.Boolean(), nullable=True),
    sa.Column('low_vram', sa.Boolean(), nullable=True),
    sa.Column('offload_kqv', sa.Boolean(), nullable=True),
    sa.Column('embedding', sa.Boolean(), nullable=True),
    sa.Column('logits_all', sa.Boolean(), nullable=True),
    sa.Column('verbose', sa.Boolean(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_llm_models_created_at'), 'llm_models', ['created_at'], unique=False)
    op.create_index(op.f('ix_llm_models_name'), 'llm_models', ['name'], unique=True)
    op.create_table('projects',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('name', sa.String(length=100), nullable=False),
    sa.Column('description', sa.String(length=255), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_projects_name'), 'projects', ['name'], unique=True)
    op.create_index('ix_projects_name_unique', 'projects', ['name'], unique=True)
    op.create_table('prompts',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('agent_name', sa.String(), nullable=False),
    sa.Column('task_type', sa.String(), nullable=True),
    sa.Column('version', sa.String(), nullable=True),
    sa.Column('system_prompt', sa.Text(), nullable=False),
    sa.Column('is_active', sa.Boolean(), nullable=True),
    sa.Column('effectiveness_score', sa.Float(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_prompts_agent_name'), 'prompts', ['agent_name'], unique=False)
    op.create_index('ix_prompts_agent_task', 'prompts', ['agent_name', 'task_type', 'is_active'], unique=False)
    op.create_index(op.f('ix_prompts_created_at'), 'prompts', ['created_at'], unique=False)
    op.create_index(op.f('ix_prompts_is_active'), 'prompts', ['is_active'], unique=False)
    op.create_index(op.f('ix_prompts_task_type'), 'prompts', ['task_type'], unique=False)
    op.create_table('llm_configs',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('description', sa.String(), nullable=True),
    sa.Column('llm_model_id', sa.UUID(), nullable=False),
    sa.Column('temperature', sa.Float(), nullable=True),
    sa.Column('max_tokens', sa.Integer(), nullable=True),
    sa.Column('top_p', sa.Float(), nullable=True),
    sa.Column('stop_tokens', postgresql.JSONB(astext_type=sa.Text()), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.ForeignKeyConstraint(['llm_model_id'], ['llm_models.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_llm_configs_created_at'), 'llm_configs', ['created_at'], unique=False)
    op.create_index(op.f('ix_llm_configs_name'), 'llm_configs', ['name'], unique=True)
    op.create_table('memories',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('namespace', sa.String(), nullable=False),
    sa.Column('key', sa.String(), nullable=True),
    sa.Column('value', sa.Text(), nullable=False),
    sa.Column('project_id', sa.UUID(), nullable=True),
    sa.Column('project_name', sa.String(), nullable=True),
    sa.Column('agent_name', sa.String(), nullable=True),
    sa.Column('task_type', sa.String(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.ForeignKeyConstraint(['project_id'], ['projects.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('ix_memory_created_at', 'memories', ['created_at'], unique=False)
    op.create_index('ix_memory_namespace_key', 'memories', ['namespace', 'key'], unique=False)
    op.create_index('ix_memory_project_agent_task', 'memories', ['project_id', 'agent_name', 'task_type'], unique=False)
    op.create_index('ix_memory_project_name_agent_task', 'memories', ['project_name', 'agent_name', 'task_type'], unique=False)
    op.create_table('tasks',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('project_id', sa.UUID(), nullable=True),
    sa.Column('parent_task_id', sa.UUID(), nullable=True),
    sa.Column('agent_name', sa.String(length=50), nullable=False),
    sa.Column('task_name', sa.String(length=255), nullable=True),
    sa.Column('description', sa.Text(), nullable=False),
    sa.Column('status', sa.String(length=50), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('dependencies', sa.Text(), nullable=True),
    sa.ForeignKeyConstraint(['parent_task_id'], ['tasks.id'], ),
    sa.ForeignKeyConstraint(['project_id'], ['projects.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('ix_project_status', 'tasks', ['project_id', 'status'], unique=False)
    op.create_index(op.f('ix_tasks_agent_name'), 'tasks', ['agent_name'], unique=False)
    op.create_index(op.f('ix_tasks_created_at'), 'tasks', ['created_at'], unique=False)
    op.create_index(op.f('ix_tasks_project_id'), 'tasks', ['project_id'], unique=False)
    op.create_index(op.f('ix_tasks_status'), 'tasks', ['status'], unique=False)
    op.create_index(op.f('ix_tasks_updated_at'), 'tasks', ['updated_at'], unique=False)
    op.create_table('agents',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('type', sa.String(), nullable=False),
    sa.Column('goal', sa.Text(), nullable=False),
    sa.Column('test_prompt', sa.Text(), nullable=True),
    sa.Column('llm_config_id', sa.UUID(), nullable=True),
    sa.Column('use_memory', sa.Boolean(), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=True),
    sa.Column('optimize_prompt', sa.Boolean(), nullable=True),
    sa.Column('can_create_tasks', sa.Boolean(), nullable=True),
    sa.Column('can_read_tasks', sa.Boolean(), nullable=True),
    sa.Column('can_execute_tasks', sa.Boolean(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.ForeignKeyConstraint(['llm_config_id'], ['llm_configs.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_agents_can_create_tasks'), 'agents', ['can_create_tasks'], unique=False)
    op.create_index(op.f('ix_agents_can_execute_tasks'), 'agents', ['can_execute_tasks'], unique=False)
    op.create_index(op.f('ix_agents_can_read_tasks'), 'agents', ['can_read_tasks'], unique=False)
    op.create_index(op.f('ix_agents_created_at'), 'agents', ['created_at'], unique=False)
    op.create_index(op.f('ix_agents_is_active'), 'agents', ['is_active'], unique=False)
    op.create_index(op.f('ix_agents_name'), 'agents', ['name'], unique=True)
    op.create_index(op.f('ix_agents_type'), 'agents', ['type'], unique=False)
    op.create_index('ix_agents_type_active', 'agents', ['type', 'is_active'], unique=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index('ix_agents_type_active', table_name='agents')
    op.drop_index(op.f('ix_agents_type'), table_name='agents')
    op.drop_index(op.f('ix_agents_name'), table_name='agents')
    op.drop_index(op.f('ix_agents_is_active'), table_name='agents')
    op.drop_index(op.f('ix_agents_created_at'), table_name='agents')
    op.drop_index(op.f('ix_agents_can_read_tasks'), table_name='agents')
    op.drop_index(op.f('ix_agents_can_execute_tasks'), table_name='agents')
    op.drop_index(op.f('ix_agents_can_create_tasks'), table_name='agents')
    op.drop_table('agents')
    op.drop_index(op.f('ix_tasks_updated_at'), table_name='tasks')
    op.drop_index(op.f('ix_tasks_status'), table_name='tasks')
    op.drop_index(op.f('ix_tasks_project_id'), table_name='tasks')
    op.drop_index(op.f('ix_tasks_created_at'), table_name='tasks')
    op.drop_index(op.f('ix_tasks_agent_name'), table_name='tasks')
    op.drop_index('ix_project_status', table_name='tasks')
    op.drop_table('tasks')
    op.drop_index('ix_memory_project_name_agent_task', table_name='memories')
    op.drop_index('ix_memory_project_agent_task', table_name='memories')
    op.drop_index('ix_memory_namespace_key', table_name='memories')
    op.drop_index('ix_memory_created_at', table_name='memories')
    op.drop_table('memories')
    op.drop_index(op.f('ix_llm_configs_name'), table_name='llm_configs')
    op.drop_index(op.f('ix_llm_configs_created_at'), table_name='llm_configs')
    op.drop_table('llm_configs')
    op.drop_index(op.f('ix_prompts_task_type'), table_name='prompts')
    op.drop_index(op.f('ix_prompts_is_active'), table_name='prompts')
    op.drop_index(op.f('ix_prompts_created_at'), table_name='prompts')
    op.drop_index('ix_prompts_agent_task', table_name='prompts')
    op.drop_index(op.f('ix_prompts_agent_name'), table_name='prompts')
    op.drop_table('prompts')
    op.drop_index('ix_projects_name_unique', table_name='projects')
    op.drop_index(op.f('ix_projects_name'), table_name='projects')
    op.drop_table('projects')
    op.drop_index(op.f('ix_llm_models_name'), table_name='llm_models')
    op.drop_index(op.f('ix_llm_models_created_at'), table_name='llm_models')
    op.drop_table('llm_models')
    op.drop_index(op.f('ix_agent_runs_created_at'), table_name='agent_runs')
    op.drop_index('ix_agent_runs_agent_task', table_name='agent_runs')
    op.drop_index(op.f('ix_agent_runs_agent_name'), table_name='agent_runs')
    op.drop_table('agent_runs')
    # ### end Alembic commands ###
